export const UNISWAP_QUERY_ABI = [
	{
		inputs: [
			{
				internalType: "contract UniswapV2Factory",
				name: "_uniswapFactory",
				type: "address",
			},
			{ internalType: "uint256", name: "_start", type: "uint256" },
			{
				internalType: "uint256",
				name: "_stop",
				type: "uint256",
			},
		],
		name: "getPairsByIndexRange",
		outputs: [{ internalType: "address[3][]", name: "", type: "address[3][]" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract IUniswapV2Pair[]",
				name: "_pairs",
				type: "address[]",
			},
		],
		name: "getReservesByPairs",
		outputs: [{ internalType: "uint256[3][]", name: "", type: "uint256[3][]" }],
		stateMutability: "view",
		type: "function",
	},
];

export const BUNDLE_EXECUTOR_ABI = [
	{
		inputs: [
			{
				internalType: "address payable",
				name: "_to",
				type: "address",
			},
			{ internalType: "uint256", name: "_value", type: "uint256" },
			{
				internalType: "bytes",
				name: "_data",
				type: "bytes",
			},
		],
		name: "call",
		outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_executor", type: "address" }],
		stateMutability: "payable",
		type: "constructor",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "_wethAmountToFirstMarket",
				type: "uint256",
			},
			{ internalType: "uint256", name: "_ethAmountToCoinbase", type: "uint256" },
			{
				internalType: "address[]",
				name: "_targets",
				type: "address[]",
			},
			{ internalType: "bytes[]", name: "_payloads", type: "bytes[]" },
		],
		name: "uniswapWeth",
		outputs: [],
		stateMutability: "payable",
		type: "function",
	},
	{ stateMutability: "payable", type: "receive" },
];

export const UNISWAP_PAIR_ABI = [
	{
		inputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "owner", type: "address" },
			{
				indexed: true,
				internalType: "address",
				name: "spender",
				type: "address",
			},
			{ indexed: false, internalType: "uint256", name: "value", type: "uint256" },
		],
		name: "Approval",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "sender", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "amount0",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount1",
				type: "uint256",
			},
			{
				indexed: true,
				internalType: "address",
				name: "to",
				type: "address",
			},
		],
		name: "Burn",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "sender", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "amount0",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount1",
				type: "uint256",
			},
		],
		name: "Mint",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "sender", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "amount0In",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount1In",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount0Out",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount1Out",
				type: "uint256",
			},
			{
				indexed: true,
				internalType: "address",
				name: "to",
				type: "address",
			},
		],
		name: "Swap",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "uint112",
				name: "reserve0",
				type: "uint112",
			},
			{
				indexed: false,
				internalType: "uint112",
				name: "reserve1",
				type: "uint112",
			},
		],
		name: "Sync",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "from", type: "address" },
			{
				indexed: true,
				internalType: "address",
				name: "to",
				type: "address",
			},
			{ indexed: false, internalType: "uint256", name: "value", type: "uint256" },
		],
		name: "Transfer",
		type: "event",
	},
	{
		constant: true,
		inputs: [],
		name: "DOMAIN_SEPARATOR",
		outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "MINIMUM_LIQUIDITY",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "PERMIT_TYPEHASH",
		outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [
			{ internalType: "address", name: "", type: "address" },
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		name: "allowance",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ internalType: "address", name: "spender", type: "address" },
			{
				internalType: "uint256",
				name: "value",
				type: "uint256",
			},
		],
		name: "approve",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [{ internalType: "address", name: "", type: "address" }],
		name: "balanceOf",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [{ internalType: "address", name: "to", type: "address" }],
		name: "burn",
		outputs: [
			{ internalType: "uint256", name: "amount0", type: "uint256" },
			{
				internalType: "uint256",
				name: "amount1",
				type: "uint256",
			},
		],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "decimals",
		outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "factory",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "getReserves",
		outputs: [
			{ internalType: "uint112", name: "_reserve0", type: "uint112" },
			{
				internalType: "uint112",
				name: "_reserve1",
				type: "uint112",
			},
			{ internalType: "uint32", name: "_blockTimestampLast", type: "uint32" },
		],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ internalType: "address", name: "_token0", type: "address" },
			{
				internalType: "address",
				name: "_token1",
				type: "address",
			},
		],
		name: "initialize",
		outputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "kLast",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [{ internalType: "address", name: "to", type: "address" }],
		name: "mint",
		outputs: [{ internalType: "uint256", name: "liquidity", type: "uint256" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "name",
		outputs: [{ internalType: "string", name: "", type: "string" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [{ internalType: "address", name: "", type: "address" }],
		name: "nonces",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ internalType: "address", name: "owner", type: "address" },
			{
				internalType: "address",
				name: "spender",
				type: "address",
			},
			{ internalType: "uint256", name: "value", type: "uint256" },
			{
				internalType: "uint256",
				name: "deadline",
				type: "uint256",
			},
			{ internalType: "uint8", name: "v", type: "uint8" },
			{
				internalType: "bytes32",
				name: "r",
				type: "bytes32",
			},
			{ internalType: "bytes32", name: "s", type: "bytes32" },
		],
		name: "permit",
		outputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "price0CumulativeLast",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "price1CumulativeLast",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [{ internalType: "address", name: "to", type: "address" }],
		name: "skim",
		outputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ internalType: "uint256", name: "amount0Out", type: "uint256" },
			{
				internalType: "uint256",
				name: "amount1Out",
				type: "uint256",
			},
			{ internalType: "address", name: "to", type: "address" },
			{
				internalType: "bytes",
				name: "data",
				type: "bytes",
			},
		],
		name: "swap",
		outputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "symbol",
		outputs: [{ internalType: "string", name: "", type: "string" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [],
		name: "sync",
		outputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "token0",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "token1",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "totalSupply",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ internalType: "address", name: "to", type: "address" },
			{
				internalType: "uint256",
				name: "value",
				type: "uint256",
			},
		],
		name: "transfer",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ internalType: "address", name: "from", type: "address" },
			{
				internalType: "address",
				name: "to",
				type: "address",
			},
			{ internalType: "uint256", name: "value", type: "uint256" },
		],
		name: "transferFrom",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
];

export const LENDING_POOL_V3_ABI = [
	{
		inputs: [
			{
				internalType: "contract IPoolAddressesProvider",
				name: "provider",
				type: "address",
			},
		],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "backer", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "fee", type: "uint256" },
		],
		name: "BackUnbacked",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: false, internalType: "address", name: "user", type: "address" },
			{
				indexed: true,
				internalType: "address",
				name: "onBehalfOf",
				type: "address",
			},
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{
				indexed: false,
				internalType: "enum DataTypes.InterestRateMode",
				name: "interestRateMode",
				type: "uint8",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "borrowRate",
				type: "uint256",
			},
			{
				indexed: true,
				internalType: "uint16",
				name: "referralCode",
				type: "uint16",
			},
		],
		name: "Borrow",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "target", type: "address" },
			{
				indexed: false,
				internalType: "address",
				name: "initiator",
				type: "address",
			},
			{ indexed: true, internalType: "address", name: "asset", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{
				indexed: false,
				internalType: "enum DataTypes.InterestRateMode",
				name: "interestRateMode",
				type: "uint8",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "premium",
				type: "uint256",
			},
			{
				indexed: true,
				internalType: "uint16",
				name: "referralCode",
				type: "uint16",
			},
		],
		name: "FlashLoan",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "asset", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "totalDebt",
				type: "uint256",
			},
		],
		name: "IsolationModeTotalDebtUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "collateralAsset",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "debtAsset",
				type: "address",
			},
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "debtToCover",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "liquidatedCollateralAmount",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "address",
				name: "liquidator",
				type: "address",
			},
			{
				indexed: false,
				internalType: "bool",
				name: "receiveAToken",
				type: "bool",
			},
		],
		name: "LiquidationCall",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: false, internalType: "address", name: "user", type: "address" },
			{
				indexed: true,
				internalType: "address",
				name: "onBehalfOf",
				type: "address",
			},
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{
				indexed: true,
				internalType: "uint16",
				name: "referralCode",
				type: "uint16",
			},
		],
		name: "MintUnbacked",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "amountMinted",
				type: "uint256",
			},
		],
		name: "MintedToTreasury",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
		],
		name: "RebalanceStableBorrowRate",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{ indexed: true, internalType: "address", name: "repayer", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{ indexed: false, internalType: "bool", name: "useATokens", type: "bool" },
		],
		name: "Repay",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "liquidityRate",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "stableBorrowRate",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "variableBorrowRate",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "liquidityIndex",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "variableBorrowIndex",
				type: "uint256",
			},
		],
		name: "ReserveDataUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
		],
		name: "ReserveUsedAsCollateralDisabled",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
		],
		name: "ReserveUsedAsCollateralEnabled",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: false, internalType: "address", name: "user", type: "address" },
			{
				indexed: true,
				internalType: "address",
				name: "onBehalfOf",
				type: "address",
			},
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{
				indexed: true,
				internalType: "uint16",
				name: "referralCode",
				type: "uint16",
			},
		],
		name: "Supply",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{
				indexed: false,
				internalType: "enum DataTypes.InterestRateMode",
				name: "interestRateMode",
				type: "uint8",
			},
		],
		name: "SwapBorrowRateMode",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{ indexed: false, internalType: "uint8", name: "categoryId", type: "uint8" },
		],
		name: "UserEModeSet",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{ indexed: true, internalType: "address", name: "to", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "Withdraw",
		type: "event",
	},
	{
		inputs: [],
		name: "ADDRESSES_PROVIDER",
		outputs: [
			{
				internalType: "contract IPoolAddressesProvider",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "BRIDGE_PROTOCOL_FEE",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "FLASHLOAN_PREMIUM_TOTAL",
		outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "FLASHLOAN_PREMIUM_TO_PROTOCOL",
		outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MAX_NUMBER_RESERVES",
		outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "POOL_REVISION",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "fee", type: "uint256" },
		],
		name: "backUnbacked",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "interestRateMode", type: "uint256" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
		],
		name: "borrow",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint8", name: "id", type: "uint8" },
			{
				components: [
					{ internalType: "uint16", name: "ltv", type: "uint16" },
					{ internalType: "uint16", name: "liquidationThreshold", type: "uint16" },
					{ internalType: "uint16", name: "liquidationBonus", type: "uint16" },
					{ internalType: "address", name: "priceSource", type: "address" },
					{ internalType: "string", name: "label", type: "string" },
				],
				internalType: "struct DataTypes.EModeCategory",
				name: "category",
				type: "tuple",
			},
		],
		name: "configureEModeCategory",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
		],
		name: "deposit",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "dropReserve",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "address", name: "from", type: "address" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "balanceFromBefore", type: "uint256" },
			{ internalType: "uint256", name: "balanceToBefore", type: "uint256" },
		],
		name: "finalizeTransfer",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "receiverAddress", type: "address" },
			{ internalType: "address[]", name: "assets", type: "address[]" },
			{ internalType: "uint256[]", name: "amounts", type: "uint256[]" },
			{ internalType: "uint256[]", name: "interestRateModes", type: "uint256[]" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
			{ internalType: "bytes", name: "params", type: "bytes" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
		],
		name: "flashLoan",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "receiverAddress", type: "address" },
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "bytes", name: "params", type: "bytes" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
		],
		name: "flashLoanSimple",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "getConfiguration",
		outputs: [
			{
				components: [{ internalType: "uint256", name: "data", type: "uint256" }],
				internalType: "struct DataTypes.ReserveConfigurationMap",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
		name: "getEModeCategoryData",
		outputs: [
			{
				components: [
					{ internalType: "uint16", name: "ltv", type: "uint16" },
					{ internalType: "uint16", name: "liquidationThreshold", type: "uint16" },
					{ internalType: "uint16", name: "liquidationBonus", type: "uint16" },
					{ internalType: "address", name: "priceSource", type: "address" },
					{ internalType: "string", name: "label", type: "string" },
				],
				internalType: "struct DataTypes.EModeCategory",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint16", name: "id", type: "uint16" }],
		name: "getReserveAddressById",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "getReserveData",
		outputs: [
			{
				components: [
					{
						components: [{ internalType: "uint256", name: "data", type: "uint256" }],
						internalType: "struct DataTypes.ReserveConfigurationMap",
						name: "configuration",
						type: "tuple",
					},
					{ internalType: "uint128", name: "liquidityIndex", type: "uint128" },
					{ internalType: "uint128", name: "currentLiquidityRate", type: "uint128" },
					{ internalType: "uint128", name: "variableBorrowIndex", type: "uint128" },
					{
						internalType: "uint128",
						name: "currentVariableBorrowRate",
						type: "uint128",
					},
					{
						internalType: "uint128",
						name: "currentStableBorrowRate",
						type: "uint128",
					},
					{ internalType: "uint40", name: "lastUpdateTimestamp", type: "uint40" },
					{ internalType: "uint16", name: "id", type: "uint16" },
					{ internalType: "address", name: "aTokenAddress", type: "address" },
					{
						internalType: "address",
						name: "stableDebtTokenAddress",
						type: "address",
					},
					{
						internalType: "address",
						name: "variableDebtTokenAddress",
						type: "address",
					},
					{
						internalType: "address",
						name: "interestRateStrategyAddress",
						type: "address",
					},
					{ internalType: "uint128", name: "accruedToTreasury", type: "uint128" },
					{ internalType: "uint128", name: "unbacked", type: "uint128" },
					{
						internalType: "uint128",
						name: "isolationModeTotalDebt",
						type: "uint128",
					},
				],
				internalType: "struct DataTypes.ReserveData",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "getReserveNormalizedIncome",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "getReserveNormalizedVariableDebt",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getReservesList",
		outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "user", type: "address" }],
		name: "getUserAccountData",
		outputs: [
			{ internalType: "uint256", name: "totalCollateralBase", type: "uint256" },
			{ internalType: "uint256", name: "totalDebtBase", type: "uint256" },
			{ internalType: "uint256", name: "availableBorrowsBase", type: "uint256" },
			{
				internalType: "uint256",
				name: "currentLiquidationThreshold",
				type: "uint256",
			},
			{ internalType: "uint256", name: "ltv", type: "uint256" },
			{ internalType: "uint256", name: "healthFactor", type: "uint256" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "user", type: "address" }],
		name: "getUserConfiguration",
		outputs: [
			{
				components: [{ internalType: "uint256", name: "data", type: "uint256" }],
				internalType: "struct DataTypes.UserConfigurationMap",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "user", type: "address" }],
		name: "getUserEMode",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "address", name: "aTokenAddress", type: "address" },
			{ internalType: "address", name: "stableDebtAddress", type: "address" },
			{ internalType: "address", name: "variableDebtAddress", type: "address" },
			{
				internalType: "address",
				name: "interestRateStrategyAddress",
				type: "address",
			},
		],
		name: "initReserve",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract IPoolAddressesProvider",
				name: "provider",
				type: "address",
			},
		],
		name: "initialize",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "collateralAsset", type: "address" },
			{ internalType: "address", name: "debtAsset", type: "address" },
			{ internalType: "address", name: "user", type: "address" },
			{ internalType: "uint256", name: "debtToCover", type: "uint256" },
			{ internalType: "bool", name: "receiveAToken", type: "bool" },
		],
		name: "liquidationCall",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address[]", name: "assets", type: "address[]" }],
		name: "mintToTreasury",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
		],
		name: "mintUnbacked",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "address", name: "user", type: "address" },
		],
		name: "rebalanceStableBorrowRate",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "interestRateMode", type: "uint256" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
		],
		name: "repay",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "interestRateMode", type: "uint256" },
		],
		name: "repayWithATokens",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "interestRateMode", type: "uint256" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "uint8", name: "permitV", type: "uint8" },
			{ internalType: "bytes32", name: "permitR", type: "bytes32" },
			{ internalType: "bytes32", name: "permitS", type: "bytes32" },
		],
		name: "repayWithPermit",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "rescueTokens",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "resetIsolationModeTotalDebt",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{
				components: [{ internalType: "uint256", name: "data", type: "uint256" }],
				internalType: "struct DataTypes.ReserveConfigurationMap",
				name: "configuration",
				type: "tuple",
			},
		],
		name: "setConfiguration",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "address", name: "rateStrategyAddress", type: "address" },
		],
		name: "setReserveInterestRateStrategyAddress",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint8", name: "categoryId", type: "uint8" }],
		name: "setUserEMode",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "bool", name: "useAsCollateral", type: "bool" },
		],
		name: "setUserUseReserveAsCollateral",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
		],
		name: "supply",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "uint8", name: "permitV", type: "uint8" },
			{ internalType: "bytes32", name: "permitR", type: "bytes32" },
			{ internalType: "bytes32", name: "permitS", type: "bytes32" },
		],
		name: "supplyWithPermit",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "interestRateMode", type: "uint256" },
		],
		name: "swapBorrowRateMode",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "protocolFee", type: "uint256" }],
		name: "updateBridgeProtocolFee",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint128", name: "flashLoanPremiumTotal", type: "uint128" },
			{
				internalType: "uint128",
				name: "flashLoanPremiumToProtocol",
				type: "uint128",
			},
		],
		name: "updateFlashloanPremiums",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
		],
		name: "withdraw",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
];

export const LENDING_POOL_PROVIDER_V3_ABI = [
	{
		inputs: [
			{ internalType: "string", name: "marketId", type: "string" },
			{ internalType: "address", name: "owner", type: "address" },
		],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "oldAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "ACLAdminUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "oldAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "ACLManagerUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "bytes32", name: "id", type: "bytes32" },
			{
				indexed: true,
				internalType: "address",
				name: "oldAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "AddressSet",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "bytes32", name: "id", type: "bytes32" },
			{
				indexed: true,
				internalType: "address",
				name: "proxyAddress",
				type: "address",
			},
			{
				indexed: false,
				internalType: "address",
				name: "oldImplementationAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newImplementationAddress",
				type: "address",
			},
		],
		name: "AddressSetAsProxy",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "string",
				name: "oldMarketId",
				type: "string",
			},
			{
				indexed: true,
				internalType: "string",
				name: "newMarketId",
				type: "string",
			},
		],
		name: "MarketIdSet",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "previousOwner",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newOwner",
				type: "address",
			},
		],
		name: "OwnershipTransferred",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "oldAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "PoolConfiguratorUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "oldAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "PoolDataProviderUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "oldAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "PoolUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "oldAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "PriceOracleSentinelUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "oldAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "PriceOracleUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "bytes32", name: "id", type: "bytes32" },
			{
				indexed: true,
				internalType: "address",
				name: "proxyAddress",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "implementationAddress",
				type: "address",
			},
		],
		name: "ProxyCreated",
		type: "event",
	},
	{
		inputs: [],
		name: "getACLAdmin",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getACLManager",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
		name: "getAddress",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getMarketId",
		outputs: [{ internalType: "string", name: "", type: "string" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getPool",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getPoolConfigurator",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getPoolDataProvider",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getPriceOracle",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getPriceOracleSentinel",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "owner",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "renounceOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newAclAdmin", type: "address" }],
		name: "setACLAdmin",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newAclManager", type: "address" }],
		name: "setACLManager",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "bytes32", name: "id", type: "bytes32" },
			{ internalType: "address", name: "newAddress", type: "address" },
		],
		name: "setAddress",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "bytes32", name: "id", type: "bytes32" },
			{
				internalType: "address",
				name: "newImplementationAddress",
				type: "address",
			},
		],
		name: "setAddressAsProxy",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "string", name: "newMarketId", type: "string" }],
		name: "setMarketId",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "newPoolConfiguratorImpl",
				type: "address",
			},
		],
		name: "setPoolConfiguratorImpl",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "newDataProvider", type: "address" },
		],
		name: "setPoolDataProvider",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newPoolImpl", type: "address" }],
		name: "setPoolImpl",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "newPriceOracle", type: "address" },
		],
		name: "setPriceOracle",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "newPriceOracleSentinel", type: "address" },
		],
		name: "setPriceOracleSentinel",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
		name: "transferOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
];

export const LENDING_POOL_PROVIDER_V2_ABI = [
	{
		inputs: [{ internalType: "string", name: "marketId", type: "string" }],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
			{ indexed: false, internalType: "bool", name: "hasProxy", type: "bool" },
		],
		name: "AddressSet",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "ConfigurationAdminUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "EmergencyAdminUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "LendingPoolCollateralManagerUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "LendingPoolConfiguratorUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "LendingPoolUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "LendingRateOracleUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "string",
				name: "newMarketId",
				type: "string",
			},
		],
		name: "MarketIdSet",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "previousOwner",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newOwner",
				type: "address",
			},
		],
		name: "OwnershipTransferred",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "PriceOracleUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
			{
				indexed: true,
				internalType: "address",
				name: "newAddress",
				type: "address",
			},
		],
		name: "ProxyCreated",
		type: "event",
	},
	{
		inputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
		name: "getAddress",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getEmergencyAdmin",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getLendingPool",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getLendingPoolCollateralManager",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getLendingPoolConfigurator",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getLendingRateOracle",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getMarketId",
		outputs: [{ internalType: "string", name: "", type: "string" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getPoolAdmin",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getPriceOracle",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "owner",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "renounceOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "bytes32", name: "id", type: "bytes32" },
			{ internalType: "address", name: "newAddress", type: "address" },
		],
		name: "setAddress",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "bytes32", name: "id", type: "bytes32" },
			{ internalType: "address", name: "implementationAddress", type: "address" },
		],
		name: "setAddressAsProxy",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "emergencyAdmin", type: "address" },
		],
		name: "setEmergencyAdmin",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "manager", type: "address" }],
		name: "setLendingPoolCollateralManager",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "configurator", type: "address" }],
		name: "setLendingPoolConfiguratorImpl",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "pool", type: "address" }],
		name: "setLendingPoolImpl",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "lendingRateOracle", type: "address" },
		],
		name: "setLendingRateOracle",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "string", name: "marketId", type: "string" }],
		name: "setMarketId",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "admin", type: "address" }],
		name: "setPoolAdmin",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "priceOracle", type: "address" }],
		name: "setPriceOracle",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
		name: "transferOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
];

export const LENDING_POOL_V2_ABI = [
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: false, internalType: "address", name: "user", type: "address" },
			{
				indexed: true,
				internalType: "address",
				name: "onBehalfOf",
				type: "address",
			},
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{
				indexed: false,
				internalType: "uint256",
				name: "borrowRateMode",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "borrowRate",
				type: "uint256",
			},
			{ indexed: true, internalType: "uint16", name: "referral", type: "uint16" },
		],
		name: "Borrow",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: false, internalType: "address", name: "user", type: "address" },
			{
				indexed: true,
				internalType: "address",
				name: "onBehalfOf",
				type: "address",
			},
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{ indexed: true, internalType: "uint16", name: "referral", type: "uint16" },
		],
		name: "Deposit",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "target", type: "address" },
			{
				indexed: true,
				internalType: "address",
				name: "initiator",
				type: "address",
			},
			{ indexed: true, internalType: "address", name: "asset", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
			{
				indexed: false,
				internalType: "uint256",
				name: "premium",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint16",
				name: "referralCode",
				type: "uint16",
			},
		],
		name: "FlashLoan",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "collateralAsset",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "debtAsset",
				type: "address",
			},
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "debtToCover",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "liquidatedCollateralAmount",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "address",
				name: "liquidator",
				type: "address",
			},
			{
				indexed: false,
				internalType: "bool",
				name: "receiveAToken",
				type: "bool",
			},
		],
		name: "LiquidationCall",
		type: "event",
	},
	{ anonymous: false, inputs: [], name: "Paused", type: "event" },
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
		],
		name: "RebalanceStableBorrowRate",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{ indexed: true, internalType: "address", name: "repayer", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "Repay",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "liquidityRate",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "stableBorrowRate",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "variableBorrowRate",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "liquidityIndex",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "variableBorrowIndex",
				type: "uint256",
			},
		],
		name: "ReserveDataUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
		],
		name: "ReserveUsedAsCollateralDisabled",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
		],
		name: "ReserveUsedAsCollateralEnabled",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{
				indexed: false,
				internalType: "uint256",
				name: "rateMode",
				type: "uint256",
			},
		],
		name: "Swap",
		type: "event",
	},
	{ anonymous: false, inputs: [], name: "Unpaused", type: "event" },
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "reserve", type: "address" },
			{ indexed: true, internalType: "address", name: "user", type: "address" },
			{ indexed: true, internalType: "address", name: "to", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "Withdraw",
		type: "event",
	},
	{
		inputs: [],
		name: "FLASHLOAN_PREMIUM_TOTAL",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "LENDINGPOOL_REVISION",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MAX_NUMBER_RESERVES",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "interestRateMode", type: "uint256" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
		],
		name: "borrow",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
		],
		name: "deposit",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "address", name: "from", type: "address" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "balanceFromBefore", type: "uint256" },
			{ internalType: "uint256", name: "balanceToBefore", type: "uint256" },
		],
		name: "finalizeTransfer",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "receiverAddress", type: "address" },
			{ internalType: "address[]", name: "assets", type: "address[]" },
			{ internalType: "uint256[]", name: "amounts", type: "uint256[]" },
			{ internalType: "uint256[]", name: "modes", type: "uint256[]" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
			{ internalType: "bytes", name: "params", type: "bytes" },
			{ internalType: "uint16", name: "referralCode", type: "uint16" },
		],
		name: "flashLoan",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "getAddressesProvider",
		outputs: [
			{
				internalType: "contract ILendingPoolAddressesProvider",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "getConfiguration",
		outputs: [
			{
				components: [{ internalType: "uint256", name: "data", type: "uint256" }],
				internalType: "struct DataTypes.ReserveConfigurationMap",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "getReserveData",
		outputs: [
			{
				components: [
					{
						components: [{ internalType: "uint256", name: "data", type: "uint256" }],
						internalType: "struct DataTypes.ReserveConfigurationMap",
						name: "configuration",
						type: "tuple",
					},
					{ internalType: "uint128", name: "liquidityIndex", type: "uint128" },
					{ internalType: "uint128", name: "variableBorrowIndex", type: "uint128" },
					{ internalType: "uint128", name: "currentLiquidityRate", type: "uint128" },
					{
						internalType: "uint128",
						name: "currentVariableBorrowRate",
						type: "uint128",
					},
					{
						internalType: "uint128",
						name: "currentStableBorrowRate",
						type: "uint128",
					},
					{ internalType: "uint40", name: "lastUpdateTimestamp", type: "uint40" },
					{ internalType: "address", name: "aTokenAddress", type: "address" },
					{
						internalType: "address",
						name: "stableDebtTokenAddress",
						type: "address",
					},
					{
						internalType: "address",
						name: "variableDebtTokenAddress",
						type: "address",
					},
					{
						internalType: "address",
						name: "interestRateStrategyAddress",
						type: "address",
					},
					{ internalType: "uint8", name: "id", type: "uint8" },
				],
				internalType: "struct DataTypes.ReserveData",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "getReserveNormalizedIncome",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "asset", type: "address" }],
		name: "getReserveNormalizedVariableDebt",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getReservesList",
		outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "user", type: "address" }],
		name: "getUserAccountData",
		outputs: [
			{ internalType: "uint256", name: "totalCollateralETH", type: "uint256" },
			{ internalType: "uint256", name: "totalDebtETH", type: "uint256" },
			{ internalType: "uint256", name: "availableBorrowsETH", type: "uint256" },
			{
				internalType: "uint256",
				name: "currentLiquidationThreshold",
				type: "uint256",
			},
			{ internalType: "uint256", name: "ltv", type: "uint256" },
			{ internalType: "uint256", name: "healthFactor", type: "uint256" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "user", type: "address" }],
		name: "getUserConfiguration",
		outputs: [
			{
				components: [{ internalType: "uint256", name: "data", type: "uint256" }],
				internalType: "struct DataTypes.UserConfigurationMap",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "address", name: "aTokenAddress", type: "address" },
			{ internalType: "address", name: "stableDebtAddress", type: "address" },
			{ internalType: "address", name: "variableDebtAddress", type: "address" },
			{
				internalType: "address",
				name: "interestRateStrategyAddress",
				type: "address",
			},
		],
		name: "initReserve",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "contract ILendingPoolAddressesProvider",
				name: "provider",
				type: "address",
			},
		],
		name: "initialize",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "collateralAsset", type: "address" },
			{ internalType: "address", name: "debtAsset", type: "address" },
			{ internalType: "address", name: "user", type: "address" },
			{ internalType: "uint256", name: "debtToCover", type: "uint256" },
			{ internalType: "bool", name: "receiveAToken", type: "bool" },
		],
		name: "liquidationCall",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "paused",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "address", name: "user", type: "address" },
		],
		name: "rebalanceStableBorrowRate",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "uint256", name: "rateMode", type: "uint256" },
			{ internalType: "address", name: "onBehalfOf", type: "address" },
		],
		name: "repay",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "configuration", type: "uint256" },
		],
		name: "setConfiguration",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "bool", name: "val", type: "bool" }],
		name: "setPause",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "address", name: "rateStrategyAddress", type: "address" },
		],
		name: "setReserveInterestRateStrategyAddress",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "bool", name: "useAsCollateral", type: "bool" },
		],
		name: "setUserUseReserveAsCollateral",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "rateMode", type: "uint256" },
		],
		name: "swapBorrowRateMode",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "asset", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
		],
		name: "withdraw",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
];

export const UNISWAP_FACTORY_V2_ABI = [
	{
		inputs: [{ internalType: "address", name: "_feeToSetter", type: "address" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "token0", type: "address" },
			{ indexed: true, internalType: "address", name: "token1", type: "address" },
			{ indexed: false, internalType: "address", name: "pair", type: "address" },
			{ indexed: false, internalType: "uint256", name: "", type: "uint256" },
		],
		name: "PairCreated",
		type: "event",
	},
	{
		constant: true,
		inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		name: "allPairs",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "allPairsLength",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ internalType: "address", name: "tokenA", type: "address" },
			{ internalType: "address", name: "tokenB", type: "address" },
		],
		name: "createPair",
		outputs: [{ internalType: "address", name: "pair", type: "address" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "feeTo",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "feeToSetter",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [
			{ internalType: "address", name: "", type: "address" },
			{ internalType: "address", name: "", type: "address" },
		],
		name: "getPair",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [{ internalType: "address", name: "_feeTo", type: "address" }],
		name: "setFeeTo",
		outputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: false,
		inputs: [{ internalType: "address", name: "_feeToSetter", type: "address" }],
		name: "setFeeToSetter",
		outputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
];

export const UNISWAP_ROUTER_V2_ABI = [
	{
		inputs: [
			{ internalType: "address", name: "_factory", type: "address" },
			{ internalType: "address", name: "_WETH", type: "address" },
		],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		inputs: [],
		name: "WETH",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "tokenA", type: "address" },
			{ internalType: "address", name: "tokenB", type: "address" },
			{ internalType: "uint256", name: "amountADesired", type: "uint256" },
			{ internalType: "uint256", name: "amountBDesired", type: "uint256" },
			{ internalType: "uint256", name: "amountAMin", type: "uint256" },
			{ internalType: "uint256", name: "amountBMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "addLiquidity",
		outputs: [
			{ internalType: "uint256", name: "amountA", type: "uint256" },
			{ internalType: "uint256", name: "amountB", type: "uint256" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "amountTokenDesired", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "addLiquidityETH",
		outputs: [
			{ internalType: "uint256", name: "amountToken", type: "uint256" },
			{ internalType: "uint256", name: "amountETH", type: "uint256" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
		],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [],
		name: "factory",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "uint256", name: "reserveIn", type: "uint256" },
			{ internalType: "uint256", name: "reserveOut", type: "uint256" },
		],
		name: "getAmountIn",
		outputs: [{ internalType: "uint256", name: "amountIn", type: "uint256" }],
		stateMutability: "pure",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "reserveIn", type: "uint256" },
			{ internalType: "uint256", name: "reserveOut", type: "uint256" },
		],
		name: "getAmountOut",
		outputs: [{ internalType: "uint256", name: "amountOut", type: "uint256" }],
		stateMutability: "pure",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
		],
		name: "getAmountsIn",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
		],
		name: "getAmountsOut",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountA", type: "uint256" },
			{ internalType: "uint256", name: "reserveA", type: "uint256" },
			{ internalType: "uint256", name: "reserveB", type: "uint256" },
		],
		name: "quote",
		outputs: [{ internalType: "uint256", name: "amountB", type: "uint256" }],
		stateMutability: "pure",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "tokenA", type: "address" },
			{ internalType: "address", name: "tokenB", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountAMin", type: "uint256" },
			{ internalType: "uint256", name: "amountBMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "removeLiquidity",
		outputs: [
			{ internalType: "uint256", name: "amountA", type: "uint256" },
			{ internalType: "uint256", name: "amountB", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "removeLiquidityETH",
		outputs: [
			{ internalType: "uint256", name: "amountToken", type: "uint256" },
			{ internalType: "uint256", name: "amountETH", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "removeLiquidityETHSupportingFeeOnTransferTokens",
		outputs: [{ internalType: "uint256", name: "amountETH", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "bool", name: "approveMax", type: "bool" },
			{ internalType: "uint8", name: "v", type: "uint8" },
			{ internalType: "bytes32", name: "r", type: "bytes32" },
			{ internalType: "bytes32", name: "s", type: "bytes32" },
		],
		name: "removeLiquidityETHWithPermit",
		outputs: [
			{ internalType: "uint256", name: "amountToken", type: "uint256" },
			{ internalType: "uint256", name: "amountETH", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "bool", name: "approveMax", type: "bool" },
			{ internalType: "uint8", name: "v", type: "uint8" },
			{ internalType: "bytes32", name: "r", type: "bytes32" },
			{ internalType: "bytes32", name: "s", type: "bytes32" },
		],
		name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
		outputs: [{ internalType: "uint256", name: "amountETH", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "tokenA", type: "address" },
			{ internalType: "address", name: "tokenB", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountAMin", type: "uint256" },
			{ internalType: "uint256", name: "amountBMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "bool", name: "approveMax", type: "bool" },
			{ internalType: "uint8", name: "v", type: "uint8" },
			{ internalType: "bytes32", name: "r", type: "bytes32" },
			{ internalType: "bytes32", name: "s", type: "bytes32" },
		],
		name: "removeLiquidityWithPermit",
		outputs: [
			{ internalType: "uint256", name: "amountA", type: "uint256" },
			{ internalType: "uint256", name: "amountB", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapETHForExactTokens",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactETHForTokens",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
		outputs: [],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactTokensForETH",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactTokensForTokens",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "uint256", name: "amountInMax", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapTokensForExactETH",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "uint256", name: "amountInMax", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapTokensForExactTokens",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{ stateMutability: "payable", type: "receive" },
];
